//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.CSEventSampleData
{
    using System; 
    using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class nodes { }
#else

    public class nodes : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public nodes()
        {
            try
            {
                Uri resourceUri = new Uri("/KinectBoard;component/SampleData/CSEventSampleData/CSEventSampleData.xaml", UriKind.RelativeOrAbsolute);
                System.Windows.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private nodeCollection _nodeCollection = new nodeCollection();

        public nodeCollection nodeCollection
        {
            get
            {
                return this._nodeCollection;
            }
        }
    }

    public class node : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private string _title = string.Empty;

        public string title
        {
            get
            {
                return this._title;
            }

            set
            {
                if (this._title != value)
                {
                    this._title = value;
                    this.OnPropertyChanged("title");
                }
            }
        }

        private double _guid = 0;

        public double guid
        {
            get
            {
                return this._guid;
            }

            set
            {
                if (this._guid != value)
                {
                    this._guid = value;
                    this.OnPropertyChanged("guid");
                }
            }
        }

        private string _postdate = string.Empty;

        public string postdate
        {
            get
            {
                return this._postdate;
            }

            set
            {
                if (this._postdate != value)
                {
                    this._postdate = value;
                    this.OnPropertyChanged("postdate");
                }
            }
        }

        private string _startdate = string.Empty;

        public string startdate
        {
            get
            {
                return this._startdate;
            }

            set
            {
                if (this._startdate != value)
                {
                    this._startdate = value;
                    this.OnPropertyChanged("startdate");
                }
            }
        }

        private string _location = string.Empty;

        public string location
        {
            get
            {
                return this._location;
            }

            set
            {
                if (this._location != value)
                {
                    this._location = value;
                    this.OnPropertyChanged("location");
                }
            }
        }

        private string _tag = string.Empty;

        public string tag
        {
            get
            {
                return this._tag;
            }

            set
            {
                if (this._tag != value)
                {
                    this._tag = value;
                    this.OnPropertyChanged("tag");
                }
            }
        }

        private string _link = string.Empty;

        public string link
        {
            get
            {
                return this._link;
            }

            set
            {
                if (this._link != value)
                {
                    this._link = value;
                    this.OnPropertyChanged("link");
                }
            }
        }
    }

    public class nodeCollection : System.Collections.ObjectModel.ObservableCollection<node>
    { 
    }
#endif
}
